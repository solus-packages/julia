name       : julia
version    : 1.7.2
release    : 31
source     :
    - https://github.com/JuliaLang/julia/releases/download/v1.7.2/julia-1.7.2-full.tar.gz : c1b4f1f75aac34c40e81805cba2d87f1e72f9ce1405a525273c3688eee12366f
homepage   : https://julialang.org/
license    : MIT
component  : programming
summary    : The Julia Language - A fresh approach to technical computing
description: |
    Julia provides ease and expressiveness for high-level numerical computing, in the same way as languages such as R, MATLAB, and Python, but also supports general programming.
builddeps  :
    - pkgconfig(lapack)
    - pkgconfig(libcurl)
    - pkgconfig(libgit2)
    - pkgconfig(libpcre2-posix)
    - pkgconfig(libunwind)
    - pkgconfig(libutf8proc)
    - pkgconfig(openblas)
    - pkgconfig(openlibm)
    - libblastrampoline-devel
    - libwhich
    - llvm-devel
    - mbedtls-devel
    - p7zip
    - patchelf
    - suitesparse-devel
rundeps    :
    # This package has to be rebuilt every time the soname of the library that is symlinked with changes its soname.
    - lapack
    - libblastrampoline
    - libgit2
    - mbedtls
    - openblas
    - openlibm
    - p7zip
    - pcre2
    - suitesparse
#networking : yes
ccache     : no
environment: |
    export SOLUS_SYS_LIBS=(libLLVM.so libamd.so libatomic.so libbtf.so libcamd.so libccolamd.so libcholmod.so \
        libcolamd.so libcurl.so libgfortran.so libgit2.so libgmp.so libgmpxx.so libgomp.so libklu.so libldl.so \
        libmbedcrypto.so libmbedtls.so libmbedx509.so libmpfr.so libnghttp2.so libopenblas.so liblapack.so libopenlibm.so \
        libpcre2-8.so libpthread.so libquadmath.so librbio.so libspqr.so libssh2.so libssp.so libstdc++.so \
        libsuitesparseconfig.so libumfpack.so libunwind.so libz.so)
setup      : |
    #Workaround to fix build until 1.7.3 is released
    cp $pkgfiles/Downloads-26d79afcde9cf837a331fce023b31f1d3699700c.tar.gz $workdir/stdlib/srccache/
    
    %apply_patches
    mkdir -p usr/lib
    ln -s $(realpath /usr/lib64/libLLVM.so) usr/lib/libLLVM-12jl.so
    ln -s $(realpath /usr/lib64/libopenblas.so) usr/lib/libopenblas64_.so
    ln -s $(realpath /usr/lib64/liblapack.so) usr/lib/liblapack64_.so
    ln -s /usr/lib64/libgcc_s.so.1 usr/lib/libgcc_s.so.1
    ln -s /usr/lib64/libblastrampoline.so usr/lib/libblastrampoline.so
    ls /usr/lib64/libblastrampoline.so
    for lib in ${SOLUS_SYS_LIBS[@]}; do
        ln -s $(realpath /usr/lib64/$lib) usr/lib/$lib
    done
build      : |
    %make \
        JULIA_CPU_TARGET="generic;haswell,-rdrnd,clone_all" \
        JLDFLAGS="$LDFLAGS" \
        LIBBLASNAME=libopenblas \
        LIBLAPACKNAME=liblapack \
        MARCH=x86-64 \
        USE_BINARYBUILDER=0 \
        USE_SYSTEM_ARPACK=1 \
        USE_SYSTEM_BLAS=1 \
        USE_SYSTEM_CSL=1 \
        USE_SYSTEM_CURL=1 \
        USE_SYSTEM_DSFMT=0 \
        USE_SYSTEM_FFTW=1 \
        USE_SYSTEM_GMP=1 \
        USE_SYSTEM_LAPACK=1 \
        USE_SYSTEM_LIBBLASTRAMPOLINE=1 \
        USE_SYSTEM_LIBGIT2=1 \
        USE_SYSTEM_LIBSSH2=1 \
        USE_SYSTEM_LIBSUITESPARSE=1 \
        USE_SYSTEM_LIBUNWIND=1 \
        USE_SYSTEM_LIBUV=0 \
        USE_SYSTEM_LIBWHICH=1 \
        USE_SYSTEM_LLVM=1 \
        USE_SYSTEM_MBEDTLS=1 \
        USE_SYSTEM_MPFR=1 \
        USE_SYSTEM_NGHTTP2=1 \
        USE_SYSTEM_OPENLIBM=1 \
        USE_SYSTEM_P7ZIP=1 \
        USE_SYSTEM_PATCHELF=1 \
        USE_SYSTEM_PCRE=1 \
        USE_SYSTEM_UTF8PROC=1 \
        USE_SYSTEM_ZLIB=1 \
        VERBOSE=1 \
        release
install    : |
    rm -f usr/lib/{libgcc_s.so.1,libopenlibm.so}
    ln -s /usr/lib64/libgcc_s.so.1 usr/lib/libgcc_s.so.1
    ln -s  $(realpath /usr/lib64/libopenlibm.so) usr/lib/libopenlibm.so
    ln -s /usr/bin/patchelf usr/tools/patchelf

    %make_install prefix=%PREFIX% libdir=%libdir% sysconfdir=/etc

    # The startup file is empty, and it's preferred to have it in $HOME.
    rm -rf $installdir/etc

    rm -f $installdir/usr/lib64/julia/{libLLVM*.so,libgcc_s.so.1,libopenblas64_.so,liblapack64_.so,libopenlibm.so}
    rm -f $installdir/usr/libexec/7z
    ln -s /usr/bin/7z $installdir/usr/libexec/7z
    for lib in ${SOLUS_SYS_LIBS[@]}; do
        rm -f $installdir/usr/lib64/julia/$lib
        ln -s ../$(objdump -p /usr/lib64/$lib | grep SONAME | awk '{ print $2 };') $installdir/usr/lib64/julia/$lib
    done
    ln -s ../$(objdump -p /usr/lib64/libLLVM.so | grep SONAME | awk '{ print $2 };') $installdir/usr/lib64/julia/libLLVM-12jl.so
    ln -s ../libgcc_s.so.1 $installdir/usr/lib64/julia/libgcc_s.so.1
    ln -s ../$(objdump -p /usr/lib64/libopenblas.so | grep SONAME | awk '{ print $2 };') $installdir/usr/lib64/julia/libopenblas64_.so
    ln -s ../$(objdump -p /usr/lib64/liblapack.so | grep SONAME | awk '{ print $2 };') $installdir/usr/lib64/julia/liblapack64_.so
patterns   :
    - docs :
        - /usr/share/doc
